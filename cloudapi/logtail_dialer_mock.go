// Code generated by MockGen. DO NOT EDIT.
// Source: go.k6.io/k6/cloudapi (interfaces: LogtailStreamDialer)

// Package cloudapi is a generated GoMock package.
package cloudapi

import (
	context "context"
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockLogtailStreamDialer is a mock of LogtailStreamDialer interface.
type MockLogtailStreamDialer struct {
	ctrl     *gomock.Controller
	recorder *MockLogtailStreamDialerMockRecorder
}

// MockLogtailStreamDialerMockRecorder is the mock recorder for MockLogtailStreamDialer.
type MockLogtailStreamDialerMockRecorder struct {
	mock *MockLogtailStreamDialer
}

// NewMockLogtailStreamDialer creates a new mock instance.
func NewMockLogtailStreamDialer(ctrl *gomock.Controller) *MockLogtailStreamDialer {
	mock := &MockLogtailStreamDialer{ctrl: ctrl}
	mock.recorder = &MockLogtailStreamDialerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLogtailStreamDialer) EXPECT() *MockLogtailStreamDialerMockRecorder {
	return m.recorder
}

// DialContext mocks base method.
func (m *MockLogtailStreamDialer) DialContext(arg0 context.Context, arg1 string, arg2 http.Header) (LogtailStreamer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DialContext", arg0, arg1, arg2)
	ret0, _ := ret[0].(LogtailStreamer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DialContext indicates an expected call of DialContext.
func (mr *MockLogtailStreamDialerMockRecorder) DialContext(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DialContext", reflect.TypeOf((*MockLogtailStreamDialer)(nil).DialContext), arg0, arg1, arg2)
}
